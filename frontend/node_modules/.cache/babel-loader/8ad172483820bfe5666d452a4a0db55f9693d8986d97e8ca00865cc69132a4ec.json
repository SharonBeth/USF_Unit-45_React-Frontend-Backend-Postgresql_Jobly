{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${JoblyApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n  //Get companies by name.\n  static async getCompanies(name) {\n    let res = await this.request(`companies/, ${name}`);\n    return res.companies;\n  }\n  //get jobs by title\n  static async getJobs(title) {\n    let res = await this.request(`jobs/, ${title}`);\n    return res.jobs;\n  }\n  //get one job by id\n  static async getJob(id) {\n    let res = await this.request(`jobs/${id}`);\n    return res.jobs;\n  }\n  //apply for a job\n\n  static async applyForJob(username, id) {\n    let res = await this.request(`users/${username}/jobs/${id}`);\n  }\n\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" + \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" + \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","JoblyApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getCompany","handle","res","company","getCompanies","name","companies","getJobs","title","jobs","getJob","id","applyForJob","username"],"sources":["/home/sharonfahler/usf/Unit-45_React-Jobly/Unit_45_react-jobly_One-More-Time/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n //Get companies by name.\n  static async getCompanies(name) {\n    let res = await this.request(`companies/, ${name}`);\n    return res.companies;\n  }\n  //get jobs by title\n  static async getJobs(title) {\n    let res = await this.request(`jobs/, ${title}`);\n    return res.jobs;\n  }\n  //get one job by id\n  static async getJob(id){\n    let res = await this.request(`jobs/${id}`);\n    return res.jobs;\n  }\n  //apply for a job\n\n  static async applyForJob(username, id){\n    let res = await this.request(`users/${username}/jobs/${id}`, )\n  }\n\n\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n    \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n    \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,CAAC;EACb;;EAGA,aAAaC,OAAOA,CAACC,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAEC,MAAM,GAAG,KAAK,EAAE;IACxDC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEJ,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC;;IAElD;IACA;IACA,MAAMG,GAAG,GAAI,GAAEX,QAAS,IAAGM,QAAS,EAAC;IACrC,MAAMM,OAAO,GAAG;MAAEC,aAAa,EAAG,UAAST,QAAQ,CAACU,KAAM;IAAE,CAAC;IAC7D,MAAMC,MAAM,GAAIP,MAAM,KAAK,KAAK,GAC1BD,IAAI,GACJ,CAAC,CAAC;IAER,IAAI;MACF,OAAO,CAAC,MAAMR,KAAK,CAAC;QAAEY,GAAG;QAAEH,MAAM;QAAED,IAAI;QAAEQ,MAAM;QAAEH;MAAQ,CAAC,CAAC,EAAEL,IAAI;IACnE,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,YAAY,EAAED,GAAG,CAACE,QAAQ,CAAC;MACzC,IAAIC,OAAO,GAAGH,GAAG,CAACE,QAAQ,CAACX,IAAI,CAACU,KAAK,CAACE,OAAO;MAC7C,MAAMC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;IACpD;EACF;;EAEA;;EAEA;;EAEA,aAAaG,UAAUA,CAACC,MAAM,EAAE;IAC9B,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAE,aAAYkB,MAAO,EAAC,CAAC;IACnD,OAAOC,GAAG,CAACC,OAAO;EACpB;EACD;EACC,aAAaC,YAAYA,CAACC,IAAI,EAAE;IAC9B,IAAIH,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAE,eAAcsB,IAAK,EAAC,CAAC;IACnD,OAAOH,GAAG,CAACI,SAAS;EACtB;EACA;EACA,aAAaC,OAAOA,CAACC,KAAK,EAAE;IAC1B,IAAIN,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAE,UAASyB,KAAM,EAAC,CAAC;IAC/C,OAAON,GAAG,CAACO,IAAI;EACjB;EACA;EACA,aAAaC,MAAMA,CAACC,EAAE,EAAC;IACrB,IAAIT,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAE,QAAO4B,EAAG,EAAC,CAAC;IAC1C,OAAOT,GAAG,CAACO,IAAI;EACjB;EACA;;EAEA,aAAaG,WAAWA,CAACC,QAAQ,EAAEF,EAAE,EAAC;IACpC,IAAIT,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAE,SAAQ8B,QAAS,SAAQF,EAAG,EAAG,CAAC;EAChE;;EAGA;AACF;;AAEA;AACA7B,QAAQ,CAACU,KAAK,GAAG,oDAAoD,GACjE,iEAAiE,GACjE,6CAA6C"},"metadata":{},"sourceType":"module","externalDependencies":[]}